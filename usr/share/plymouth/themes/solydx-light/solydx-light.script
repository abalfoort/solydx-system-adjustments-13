# SolydX Light Plymouth theme script
# https://freedesktop.org/wiki/Software/Plymouth/Scripts/

# RGB / 256
Window.SetBackgroundTopColor (1.00, 0.75, 0.51);
Window.SetBackgroundBottomColor (1.00, 0.75, 0.51);

# Load the images
bg.image = Image("plymouth-bg.png");
logo.image = Image("plymouth-logo.png");
bglogo.image = Image("plymouth-bglogo.png");

# Logo background should not be more narrow than the logo itself
bg_tmp = bg.image.Scale(Window.GetWidth() / 5 , Window.GetHeight());
if (bg_tmp.GetWidth() > logo.image.GetWidth() + 20) {
    bg.image = bg_tmp;
} else {
    bg.image = bg.image.Scale(bg.image.GetWidth(), Window.GetHeight());
}

# Place the background
bg.sprite = Sprite(bg.image);
bg.sprite.SetX(Window.GetX() + Window.GetWidth() - bg.image.GetWidth());
bg.sprite.SetY(Window.GetY() + Window.GetHeight() / 2 - bg.image.GetHeight() / 2);

# Resize logo only when the background is wider than the width of the logo
logo_width_old = logo.image.GetWidth();
logo_tmp = logo.image.Scale(bg.image.GetWidth() / 1.8, logo.image.GetHeight());
logo_width_new = logo_tmp.GetWidth();
if (logo_width_new > logo_width_old) {
    logo.image = logo_tmp.Scale(logo_tmp.GetWidth(), logo.image.GetHeight() * (logo_width_new / logo_width_old));
}

# Place the logo
logo.sprite = Sprite(logo.image);
logo.sprite.SetX(Window.GetX() + Window.GetWidth() - (bg.image.GetWidth() / 2) - (logo.image.GetWidth() / 2));
logo.sprite.SetY(Window.GetY() + 40);
logo.opacity_angle = -3.14;

# Place the background logo
bglogo.image = bglogo.image.Scale(Window.GetHeight() / 1.5, Window.GetHeight() / 1.5);
bglogo.sprite = Sprite(bglogo.image);
bglogo.sprite.SetX(bg.sprite.GetX() - bglogo.image.GetWidth());
bglogo.sprite.SetY(Window.GetY() + Window.GetHeight() - bglogo.image.GetHeight());

fun refresh_callback () {
    if (status == "normal") {
        logo.opacity_angle += ((2 * 3.14) / 50) * 0.25;
        min_opacity = 0.4;
        opacity = (Math.Cos(logo.opacity_angle) + 1) / 2;
        if (logo.opacity_angle >= 0) {
            opacity *= 1 - min_opacity;
            opacity += min_opacity;
        }
        logo.sprite.SetOpacity (opacity);
    }
}
  
Plymouth.SetRefreshFunction (refresh_callback);

#----------------------------------------- Dialogue --------------------------------

status = "normal";

fun dialog_setup() {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");
    lock.image = Image("lock.png");
    entry.image = Image("entry.png");
    
    box.sprite = Sprite(box.image);
    box.x = Window.GetX() + Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetY() + Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2 - 5;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2 + 1;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + 10 + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
}
    
fun dialog_opacity(opacity) {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++) {
        dialog.bullet[index].sprite.SetOpacity(opacity);
    }
}

fun display_normal_callback () {
    global.status = "normal";
    if (global.dialog)
        dialog_opacity (0);
}

fun display_password_callback (prompt, bullets) {
    global.status = "password";
    if (!global.dialog)
    dialog_setup();
    else
    dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++) {
        if (!dialog.bullet[index]) {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + 10 + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2 + 1;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
        }
        if (index < bullets)
          dialog.bullet[index].sprite.SetOpacity(1);
        else
          dialog.bullet[index].sprite.SetOpacity(0);
    }
}

Plymouth.SetDisplayNormalFunction(display_normal_callback);
Plymouth.SetDisplayPasswordFunction(display_password_callback);

#----------------------------------------- Quit --------------------------------

fun quit_callback () {
    logo.sprite.SetOpacity (1);
}

Plymouth.SetQuitFunction(quit_callback);

#----------------------------------------- Message --------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10 , Window.GetY() + Window.GetHeight() - 30, 0);

fun message_callback (text) {
    my_image = Image.Text(text, 1, 1, 1);
    message_sprite.SetImage(my_image);
}

Plymouth.SetMessageFunction(message_callback);
